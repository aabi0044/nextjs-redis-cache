{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\test\\\\Desktop\\\\Testing\\\\redis-cache-nextjs\\\\src\\\\pages\\\\index.jsx\";\nimport bluebird from 'bluebird';\nimport uuid from 'react-uuid';\nimport redis from 'redis';\n\nconst fetchData = async url => {\n  console.log('fetching...');\n  const query = await fetch(url);\n  return await query.json();\n};\n\nexport const getStaticProps = async () => {\n  bluebird.promisifyAll(redis.RedisClient.prototype);\n  const cache = redis.createClient();\n  let data = {};\n  await cache.existsAsync('articles').then(async reply => {\n    if (reply !== 1) {\n      // cache miss, need to fetch\n      data = await fetchData('https://www.healthcare.gov/api/articles.json');\n      await cache.set('articles', JSON.stringify(data));\n    } else {\n      // cache hit, will get data from redis\n      data = JSON.parse(await cache.getAsync('articles'));\n    }\n  });\n  return {\n    props: {\n      articles: data.articles\n    }\n  };\n};\n\nconst Home = ({\n  articles\n}) => /*#__PURE__*/_jsxDEV(\"article\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"HealthCare.gov Articles:\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Language\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Article\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: articles && articles.length > 0 && articles.map(el => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: el.lang\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: 'https://www.healthcare.gov' + el.url,\n            target: \"_blank\",\n            children: el.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: el.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, uuid(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 33,\n  columnNumber: 3\n}, this);\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/test/Desktop/Testing/redis-cache-nextjs/src/pages/index.jsx"],"names":["bluebird","uuid","redis","fetchData","url","console","log","query","fetch","json","getStaticProps","promisifyAll","RedisClient","prototype","cache","createClient","data","existsAsync","then","reply","set","JSON","stringify","parse","getAsync","props","articles","Home","length","map","el","lang","title","date"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,MAAOC,GAAP,IAAe;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,QAAMC,KAAK,GAAG,MAAMC,KAAK,CAACJ,GAAD,CAAzB;AACA,SAAO,MAAMG,KAAK,CAACE,IAAN,EAAb;AACD,CAJD;;AAMA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxCV,EAAAA,QAAQ,CAACW,YAAT,CAAsBT,KAAK,CAACU,WAAN,CAAkBC,SAAxC;AACA,QAAMC,KAAK,GAAGZ,KAAK,CAACa,YAAN,EAAd;AACA,MAAIC,IAAI,GAAG,EAAX;AAEA,QAAMF,KAAK,CAACG,WAAN,CAAkB,UAAlB,EAA8BC,IAA9B,CAAmC,MAAMC,KAAN,IAAe;AACtD,QAAIA,KAAK,KAAK,CAAd,EAAiB;AAAE;AACjBH,MAAAA,IAAI,GAAG,MAAMb,SAAS,CAAC,8CAAD,CAAtB;AACA,YAAMW,KAAK,CAACM,GAAN,CAAU,UAAV,EAAsBC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAtB,CAAN;AACD,KAHD,MAGO;AAAE;AACPA,MAAAA,IAAI,GAAGK,IAAI,CAACE,KAAL,CAAW,MAAMT,KAAK,CAACU,QAAN,CAAe,UAAf,CAAjB,CAAP;AACD;AACF,GAPK,CAAN;AASA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAEV,IAAI,CAACU;AADV;AADF,GAAP;AAKD,CAnBM;;AAqBP,MAAMC,IAAI,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,kBACX;AAAA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA,4BACE;AAAA,6BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAA,gBACGA,QAAQ,IAAIA,QAAQ,CAACE,MAAT,GAAkB,CAA9B,IAAmCF,QAAQ,CAACG,GAAT,CAAcC,EAAD,iBAC/C;AAAA,gCACE;AAAA,oBAAKA,EAAE,CAACC;AAAR;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,iCACE;AAAG,YAAA,IAAI,EAAE,+BAA+BD,EAAE,CAAC1B,GAA3C;AAAgD,YAAA,MAAM,EAAC,QAAvD;AAAA,sBAAiE0B,EAAE,CAACE;AAApE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE;AAAA,oBACGF,EAAE,CAACG;AADN;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA,SAAShC,IAAI,EAAb;AAAA;AAAA;AAAA;AAAA,cADkC;AADtC;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AA4BA,eAAe0B,IAAf","sourcesContent":["import bluebird from 'bluebird';\r\nimport uuid from 'react-uuid';\r\nimport redis from 'redis';\r\n\r\nconst fetchData = async (url) => {\r\n  console.log('fetching...');\r\n  const query = await fetch(url);\r\n  return await query.json();\r\n};\r\n\r\nexport const getStaticProps = async () => {\r\n  bluebird.promisifyAll(redis.RedisClient.prototype);\r\n  const cache = redis.createClient();\r\n  let data = {};\r\n\r\n  await cache.existsAsync('articles').then(async reply => {\r\n    if (reply !== 1) { // cache miss, need to fetch\r\n      data = await fetchData('https://www.healthcare.gov/api/articles.json');\r\n      await cache.set('articles', JSON.stringify(data));\r\n    } else { // cache hit, will get data from redis\r\n      data = JSON.parse(await cache.getAsync('articles'));\r\n    }\r\n  });\r\n\r\n  return {\r\n    props: {\r\n      articles: data.articles,\r\n    },\r\n  };\r\n};\r\n\r\nconst Home = ({ articles }) => (\r\n  <article>\r\n    <h1>HealthCare.gov Articles:</h1>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Language</th>\r\n          <th>Article</th>\r\n          <th>Date</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {articles && articles.length > 0 && articles.map((el) => (\r\n          <tr key={uuid()}>\r\n            <td>{el.lang}</td>\r\n            <td>\r\n              <a href={'https://www.healthcare.gov' + el.url} target=\"_blank\">{el.title}</a>\r\n            </td>\r\n            <td>\r\n              {el.date}\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  </article>\r\n);\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}